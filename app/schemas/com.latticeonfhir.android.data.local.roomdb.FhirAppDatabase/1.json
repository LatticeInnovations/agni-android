{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "6da0ae0531a7786771d6828e2615464c",
    "entities": [
      {
        "tableName": "PatientEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `firstName` TEXT NOT NULL, `middleName` TEXT, `lastName` TEXT, `active` INTEGER, `gender` TEXT NOT NULL, `birthDate` INTEGER NOT NULL, `mobileNumber` INTEGER, `email` TEXT, `fhirId` TEXT, `addressLine1` TEXT NOT NULL, `city` TEXT, `district` TEXT, `state` TEXT NOT NULL, `postalCode` TEXT NOT NULL, `country` TEXT, `addressLine2` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "firstName",
            "columnName": "firstName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "middleName",
            "columnName": "middleName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "active",
            "columnName": "active",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "gender",
            "columnName": "gender",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "birthDate",
            "columnName": "birthDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mobileNumber",
            "columnName": "mobileNumber",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fhirId",
            "columnName": "fhirId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "permanentAddress.addressLine1",
            "columnName": "addressLine1",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "permanentAddress.city",
            "columnName": "city",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "permanentAddress.district",
            "columnName": "district",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "permanentAddress.state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "permanentAddress.postalCode",
            "columnName": "postalCode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "permanentAddress.country",
            "columnName": "country",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "permanentAddress.addressLine2",
            "columnName": "addressLine2",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "GenericEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `patientId` TEXT NOT NULL, `payload` TEXT NOT NULL, `type` TEXT NOT NULL, `syncType` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "patientId",
            "columnName": "patientId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "payload",
            "columnName": "payload",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "syncType",
            "columnName": "syncType",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_GenericEntity_patientId",
            "unique": false,
            "columnNames": [
              "patientId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_GenericEntity_patientId` ON `${TABLE_NAME}` (`patientId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "IdentifierEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`identifierNumber` TEXT NOT NULL, `identifierType` TEXT NOT NULL, `identifierCode` TEXT, `patientId` TEXT NOT NULL, PRIMARY KEY(`identifierNumber`), FOREIGN KEY(`patientId`) REFERENCES `PatientEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "identifierNumber",
            "columnName": "identifierNumber",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "identifierType",
            "columnName": "identifierType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "identifierCode",
            "columnName": "identifierCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "patientId",
            "columnName": "patientId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "identifierNumber"
          ]
        },
        "indices": [
          {
            "name": "index_IdentifierEntity_patientId",
            "unique": false,
            "columnNames": [
              "patientId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_IdentifierEntity_patientId` ON `${TABLE_NAME}` (`patientId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "PatientEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "patientId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "RelationEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `fromId` TEXT NOT NULL, `toId` TEXT NOT NULL, `relation` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`fromId`) REFERENCES `PatientEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fromId",
            "columnName": "fromId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "toId",
            "columnName": "toId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "relation",
            "columnName": "relation",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_RelationEntity_fromId_toId",
            "unique": false,
            "columnNames": [
              "fromId",
              "toId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_RelationEntity_fromId_toId` ON `${TABLE_NAME}` (`fromId`, `toId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "PatientEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "fromId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "SearchHistoryEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`searchQuery` TEXT NOT NULL, `date` INTEGER NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL)",
        "fields": [
          {
            "fieldPath": "searchQuery",
            "columnName": "searchQuery",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [
      {
        "viewName": "RelationView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS select pat1.id as patientId , pat1.firstName as patientFirstName, pat1.middleName as patientMiddleName, pat1.lastName as patientLastName, pat2.id as relativeId ,pat2.firstName as relativeFirstName, pat2.middleName as relativeMiddleName, pat2.lastName as relativeLastName, rel.relation   as relation from RelationEntity rel \ninner join PatientEntity pat1 on rel.fromId = pat1.id\ninner join PatientEntity pat2 on rel.toId = pat2.id"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '6da0ae0531a7786771d6828e2615464c')"
    ]
  }
}