name: Android CI

on:
  pull_request:
    branches: [ main ]
  push: 
    branches: [dev]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'zulu'
        cache: gradle
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 7.4
      
    - name: Setup Gradle Cache
      uses: actions/cache@v2
      with:
       path: |
        ~/.gradle/caches
        ~/.gradle/wrapper
       key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
       
    - name: Execute Gradle build
      run: ./gradlew build
       
#     - name: Run Ktlint
#       run: ./gradlew ktlintStagingDebugCheck

#     - name: Run Unit Tests
#       run: ./gradlew testStagingDebugUnitTest

    - name: Build app
      run: ./gradlew assembleDebug assembleAndroidTest
    - name: Run tests
      uses: emulator-wtf/run-tests@master
      with:
        api-token: ${{ secrets.EW_API_TOKEN }}
        app: app/build/outputs/apk/debug/app-debug.apk
        test: app/build/outputs/apk/androidTest/app-debug-androidTest.apk
        outputs-dir: build/test-results
    - name: Publish test report
      uses: mikepenz/action-junit-report@v2
      if: always() # always run even if the tests fail
      with:
        report_paths: 'build/test-results/**/*.xml'
